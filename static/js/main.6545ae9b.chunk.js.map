{"version":3,"sources":["ui/layout.tsx","ui/arrow-icon.tsx","components/trips-item.tsx","components/trips-list.tsx","helpers.ts","components/trips-map.tsx","app.tsx","index.tsx"],"names":["Root","Object","linaria_react","name","class","MapContainer","ListContainer","Layout","_ref","mapElement","listElement","react_default","a","createElement","ArrowIcon","height","width","xmlns","viewBox","d","defaultProps","formatInteger","_int","concat","Math","padStart","StationWrapper","vars","s1rg3bnu-0","p","s1rg3bnu-1","Center","StationName","Duration","TripsItem","id","isSelected","onSelectTrip","endStationName","startStationName","tripduration","starttime","stoptime","handleSelectTrip","useCallback","rootRef","useRef","handleSelectTripOnHover","trips_item_Root","tabIndex","ref","onMouseEnter","onFocus","format","duration","seconds","minutes","hours","formatDuration","arrow_icon_ArrowIcon","isEnd","TripsList","trips","currentTripId","trips_list_Root","_ref2","_ref3","slicedToArray","tripId","trip","trips_item_TripsItem","assign","key","getTripStartCoords","startStationLongitude","startStationLatitude","getTripEndCoords","endStationLongitude","endStationLatitude","Map","ReactMapboxGl","accessToken","MarkerInner","m1n3i4nj-0","m1n3i4nj-1","m1n3i4nj-2","m1n3i4nj-3","m1n3i4nj-4","m1n3i4nj-5","m1n3i4nj-6","fitBoundsOptions","padding","top","left","bottom","right","TripsMap","fitBounds","useMemo","tripsArray","values","_tripsArray","toArray","firstTrip","slice","reduce","_ref4","_ref5","_ref5$","smallestLng","smallestLat","_ref5$2","biggestLng","biggestLat","min","max","calcMapBounds","currentTrip","className","style","react","entries","map","startStationCoords","endStationCoords","lib_esm","anchor","zIndex","coordinates","sizeMultiplier","trips_map_StationName","tripsData","acc","objectSpread","defineProperty","uuid","camelcaseKeys","ReactDOM","render","_useState","useState","_useState2","setCurrentTripId","layout_Layout","trips_map_TripsMap","trips_list_TripsList","document","getElementById"],"mappings":"kRAGMA,EAAIC,OAAAC,EAAA,OAAAD,CAAA,MAAAA,CAAA,CAAAE,KAAA,OAAAC,MAAA,aAKJC,EAAYJ,OAAAC,EAAA,OAAAD,CAAA,MAAAA,CAAA,CAAAE,KAAA,eAAAC,MAAA,YAKZE,EAAaL,OAAAC,EAAA,OAAAD,CAAA,MAAAA,CAAA,CAAAE,KAAA,gBAAAC,MAAA,aASNG,EAAgC,SAAAC,GAAA,IAACC,EAADD,EAACC,WAAcC,EAAfF,EAAeE,YAAf,OAC3CC,EAAAC,EAAAC,cAAAb,EAAA,KACEW,EAAAC,EAAAC,cAAAP,EAAA,KAAeI,GACfC,EAAAC,EAAAC,cAAAR,EAAA,KAAcI,YClBX,IAAMK,EAAiC,SAAAN,GAAuB,IAApBO,EAAoBP,EAApBO,OAAQC,EAAYR,EAAZQ,MACvD,OACEL,EAAAC,EAAAC,cAAA,OACEI,MAAM,6BACNF,OAAQA,EACRC,MAAOA,EACPE,QAAQ,mBAERP,EAAAC,EAAAC,cAAA,QAAMM,EAAE,+QAKdL,EAAUM,aAAe,CACvBL,OAAQ,MACRC,MAAO,OChBT,IAAMK,EAAgB,SAAAC,GAAA,MACnB,GAAAC,OAAEC,WAAHF,IAAAG,SAAA,EADF,MAaMC,EAAczB,OAAAC,EAAA,OAAAD,CAAA,MAAAA,CAAA,CAAAE,KAAA,iBAAAC,MAAA,WAAAuB,KAAA,CAAAC,aAAA,CACCC,YAAD,OAChBA,mCAFgB,2BAAAC,aAAA,CAabD,YAAD,OAAQA,mCAbM,YAgBdE,EAAM9B,OAAAC,EAAA,OAAAD,CAAA,MAAAA,CAAA,CAAAE,KAAA,SAAAC,MAAA,aAcN4B,EAAW/B,OAAAC,EAAA,OAAAD,CAAA,KAAAA,CAAA,CAAAE,KAAA,cAAAC,MAAA,aAQX6B,EAAQhC,OAAAC,EAAA,OAAAD,CAAA,OAAAA,CAAA,CAAAE,KAAA,WAAAC,MAAA,aAIRJ,EAAIC,OAAAC,EAAA,OAAAD,CAAA,KAAAA,CAAA,CAAAE,KAAA,OAAAC,MAAA,aAeG8B,EAAqC,SAAA1B,GAS5C,IAT6C2B,EAS7C3B,EAT6C2B,GAAAC,EAS7C5B,EAT6C4B,WAAAC,EAS7C7B,EAT6C6B,aAAAC,EAS7C9B,EAT6C8B,eAAAC,EAS7C/B,EAT6C+B,iBAAAC,EAS7ChC,EAT6CgC,aAAAC,EAS7CjC,EAT6CiC,UAQjDC,EACIlC,EADJkC,SAEMC,EAAmBC,sBAAY,kBAAMP,EAAPF,IAAyB,CAAAA,EAA7DE,IAKMQ,EAAUC,iBAAhB,MACMC,EAA0BH,sBAAY,WAC1CP,KAEA,OAAIQ,WAA0BA,mBAC7B,CAAAV,EAJHE,IAMA,OACE1B,EAAAC,EAAAC,cAAAmC,EAAA,CACEC,SADF,EAEEC,IAFFL,EAGEM,aAHFJ,EAIEK,QAJFT,GAMEhC,EAAAC,EAAAC,cAAAa,EAAA,CAAgBU,WAAhBA,GACEzB,EAAAC,EAAAC,cAAAmB,EAAA,KAAaO,GACb5B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,YAAOwC,iBAAMZ,EA5FvB,uBAgGM9B,EAAAC,EAAAC,cAAAkB,EAAA,KACEpB,EAAAC,EAAAC,cAAAoB,EAAA,KAzGe,SAAAqB,GACrB,IAAMC,EAAUlC,EAAciC,EAA9B,IACME,EAAUnC,EAAciC,EAA9B,IACMG,EAAQpC,EAAciC,EAA5B,MAEA,SAAA/B,OAAUkC,EAAV,MAAAlC,OAAoBiC,EAApB,MAAAjC,OAAAgC,EAAA,KAoGiBG,CAADlB,IACV7B,EAAAC,EAAAC,cAAA8C,EAAA,OAGFhD,EAAAC,EAAAC,cAAAa,EAAA,CAAgBkC,OAAhB,EAAsBxB,WAAtBA,GACEzB,EAAAC,EAAAC,cAAAmB,EAAA,KAAaM,GACb3B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,YAAOwC,iBAAMX,EAzGvB,gCCXA,IAAM1C,EAAIC,OAAAC,EAAA,OAAAD,CAAA,KAAAA,CAAA,CAAAE,KAAA,OAAAC,MAAA,aA0BGyD,EAAsC,SAAArD,GAAA,IAACsD,EAADtD,EAACsD,MAAAzB,EAAD7B,EAAC6B,aAGlD0B,EAHiDvD,EAGjDuD,cAHiD,OAKjDpD,EAAAC,EAAAC,cAAAmD,EAAA,KACG/D,sBAA0B,SAAAgE,GAAA,IAAAC,EAAAjE,OAAAkE,EAAA,EAAAlE,CAAAgE,EAAA,GAACG,EAADF,EAAA,GAAAG,EAAAH,EAAA,UACzBvD,EAAAC,EAAAC,cAAAyD,EAAArE,OAAAsE,OAAA,CACElC,aADFA,EAEED,WAAYgC,IAFdL,EAGES,IAHFJ,EAIEjC,GAJFiC,GADFC,2BCpCSI,EAAqB,SAAAjE,GAAA,MAGV,CAHUA,EAChCkE,sBADgClE,EAEhCmE,uBAGWC,EAAmB,SAAAX,GAAA,MAGR,CAHQA,EAC9BY,oBAD8BZ,EAE9Ba,4BCEIC,EAAMC,YAAc,CACxBC,YACE,uGAQEjD,EAAW/B,OAAAC,EAAA,OAAAD,CAAA,KAAAA,CAAA,CAAAE,KAAA,cAAAC,MAAA,aAIX8E,EAAWjF,OAAAC,EAAA,OAAAD,CAAA,MAAAA,CAAA,CAAAE,KAAA,cAAAC,MAAA,WAAAuB,KAAA,CAAAwD,aAAA,CAKItD,YAAD,OAChBA,mCANa,2BAAAuD,aAAA,CAOGvD,YAAD,OAAOL,WAAWK,iBAPpB,KAAAwD,aAAA,CAaMxD,YAAD,OAAQA,mCAbb,SAAAyD,aAAA,CAcHzD,YAAD,OAAQA,eAdJ,IAAA0D,aAAA,CAgBA1D,YAAD,OAAQA,iCAhBP,SAAA2D,aAAA,CAiBD3D,YAAD,OAAQA,yCAjBN,SAAA4D,aAAA,CAmBV5D,YAAD,OAAQA,mCAnBG,YA2BX6D,EAAmB,CACvBC,QAAS,CAAEC,IAAF,GAAWC,KAAX,GAAqBC,OAArB,GAAiCC,MAAO,KAGtCC,EAAoC,SAAAxF,GAA8B,IAA7BsD,EAA6BtD,EAA7BsD,MAASC,EAAoBvD,EAApBuD,cACnDkC,EAAYC,kBAA0B,kBD7CjB,SAACpC,GAC5B,IAAMqC,EAAalG,OAAOmG,OAAOtC,GADgBuC,EAAApG,OAAAqG,EAAA,EAAArG,CAGdkG,GAA5BI,EAH0CF,EAAA,GAKjD,OALiDA,EAAAG,MAAA,GAK/BC,OAChB,SAAAvC,EAAAwC,GAAA,IAAAC,EAAA1G,OAAAkE,EAAA,EAAAlE,CAAAiE,EAAA,GAAA0C,EAAA3G,OAAAkE,EAAA,EAAAlE,CAAA0G,EAAA,MACIE,EADJD,EAAA,GACiBE,EADjBF,EAAA,GAAAG,EAAA9G,OAAAkE,EAAA,EAAAlE,CAAA0G,EAAA,MACgCK,EADhCD,EAAA,GAC4CE,EAD5CF,EAAA,GAGIrC,EAHJgC,EAGIhC,sBACAC,EAJJ+B,EAII/B,qBACAE,EALJ6B,EAKI7B,oBACAC,EANJ4B,EAMI5B,mBANJ,MAQK,CACH,CACEtD,KAAK0F,IAAIxC,EAAuBG,EAAqBgC,GACrDrF,KAAK0F,IAAIvC,EAAsBG,EAAoBgC,IAErD,CACEtF,KAAK2F,IAAIzC,EAAuBG,EAAqBmC,GACrDxF,KAAK2F,IAAIxC,EAAsBG,EAAoBmC,MAGvD,CAACxC,EAAmB8B,GAAY3B,EAAiB2B,KCqBDa,CAAzBtD,IAA+C,CAAxEA,IAIMuD,EAActD,GAAiBD,EAArCC,GAEA,OACEpD,EAAAC,EAAAC,cAAAkE,EAAA,CACEuC,UAjDN,WAkDMrB,UAFFA,EAGEP,iBAHFA,EAIE6B,MAJF,4DAME5G,EAAAC,EAAAC,cAAA2G,EAAA,cACGvH,OAAAwH,QAAA3D,GAAA4D,IAA0B,SAAAzD,GAAoB,IAAAC,EAAAjE,OAAAkE,EAAA,EAAAlE,CAAAgE,EAAA,GAAnBG,EAAmBF,EAAA,GAApBG,EAAoBH,EAAA,GACvC9B,EAAagC,IAAnBL,EACM4D,EAAqBlD,EAA3BJ,GACMuD,EAAmBhD,EAAzBP,GAEA,OACE1D,EAAAC,EAAAC,cAAA2G,EAAA,UAAUhD,IAAVJ,GACEzD,EAAAC,EAAAC,cAAAgH,EAAA,GACEC,OADF,SAEEP,MAAO,CAAEQ,OAAQ3F,EAAU,EAAO,GAClC4F,YAHFL,GAKEhH,EAAAC,EAAAC,cAAAqE,EAAA,CACE+C,eAAgB5D,EADlB7B,aAEEJ,WAFFA,KAKFzB,EAAAC,EAAAC,cAAAgH,EAAA,GACEC,OADF,SAEEP,MAAO,CACLQ,OAAQ3F,EAAU,EAAO,GAE3B4F,YALFJ,GAOEjH,EAAAC,EAAAC,cAAAqE,EAAA,CACE+C,eAAgB5D,EADlB7B,aAEEJ,WAFFA,EAGEwB,OAHF,QAUPyD,GACC1G,EAAAC,EAAAC,cAAA2G,EAAA,cACE7G,EAAAC,EAAAC,cAAAgH,EAAA,GAAOG,YAAavD,EAApB4C,IACE1G,EAAAC,EAAAC,cAAAqH,EAAA,KAAcb,EAAD9E,mBAGf5B,EAAAC,EAAAC,cAAAgH,EAAA,GAAOG,YAAapD,EAApByC,IACE1G,EAAAC,EAAAC,cAAAqH,EAAA,KAAcb,EAAD/E,yDCtGrB6F,QAA+B1B,OAAO,SAAC2B,EAAK/D,GAChD,OAAApE,OAAAoI,EAAA,EAAApI,CAAA,GACKmI,EADLnI,OAAAqI,EAAA,EAAArI,CAAA,GAEGsI,eAAUC,IAAcnE,MAE1B,ICRHoE,IAASC,OAAO/H,EAAAC,EAAAC,cDUa,WAAM,IAAA8H,EACSC,mBAAwB,MADjCC,EAAA5I,OAAAkE,EAAA,EAAAlE,CAAA0I,EAAA,GAC1B5E,EAD0B8E,EAAA,GACXC,EADWD,EAAA,GAGjC,OACElI,EAAAC,EAAAC,cAAC2G,EAAA,SAAD,KACE7G,EAAAC,EAAAC,cAACkI,EAAD,CACEtI,WACEE,EAAAC,EAAAC,cAACmI,EAAD,CAAUjF,cAAeA,EAAeD,MAAOqE,IAEjDzH,YACEC,EAAAC,EAAAC,cAACoI,EAAD,CACE5G,aAAcyG,EACdhF,MAAOqE,EACPpE,cAAeA,QCvBX,MAASmF,SAASC,eAAe","file":"static/js/main.6545ae9b.chunk.js","sourcesContent":["import React from 'react'\nimport { styled } from 'linaria/react'\n\nconst Root = styled.div`\n  display: flex;\n  height: 100vh;\n`\n\nconst MapContainer = styled.div`\n  flex-grow: 1;\n  flex-shrink: 1;\n`\n\nconst ListContainer = styled.div`\n  flex-shrink: 0;\n`\n\ninterface LayoutProps {\n  mapElement: React.ReactNode\n  listElement: React.ReactNode\n}\n\nexport const Layout: React.FC<LayoutProps> = ({ mapElement, listElement }) => (\n  <Root>\n    <ListContainer>{listElement}</ListContainer>\n    <MapContainer>{mapElement}</MapContainer>\n  </Root>\n)\n","import React from 'react'\n\ninterface IconProps {\n  height?: number\n  width?: number\n}\n\nexport const ArrowIcon: React.FC<IconProps> = ({ height, width }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height={height}\n      width={width}\n      viewBox=\"0 0 31.49 31.49\"\n    >\n      <path d=\"M21.205 5.007a1.112 1.112 0 0 0-1.587 0 1.12 1.12 0 0 0 0 1.571l8.047 8.047H1.111A1.106 1.106 0 0 0 0 15.737c0 .619.492 1.127 1.111 1.127h26.554l-8.047 8.032c-.429.444-.429 1.159 0 1.587a1.112 1.112 0 0 0 1.587 0l9.952-9.952a1.093 1.093 0 0 0 0-1.571l-9.952-9.953z\" />\n    </svg>\n  )\n}\n\nArrowIcon.defaultProps = {\n  height: 31.49,\n  width: 31.49\n}\n","import React, { useCallback, useRef } from 'react'\nimport { styled } from 'linaria/react'\nimport { TripItem } from 'src/types'\nimport { format } from 'date-fns'\nimport { ArrowIcon } from 'src/ui'\n\nconst formatInteger = (int: number): string =>\n  `${Math.floor(int)}`.padStart(2, '0')\n\nconst formatDuration = (duration: number): string => {\n  const seconds = formatInteger(duration % 60)\n  const minutes = formatInteger(duration / 60)\n  const hours = formatInteger(duration / 3600)\n\n  return `${hours}h ${minutes}m ${seconds}s`\n}\n\nconst DATE_FORMAT = 'YYYY.MM.DD HH:mm'\n\nconst StationWrapper = styled.div<{ isEnd?: boolean; isSelected: boolean }>`\n  --border-color: ${(p) =>\n    p.isEnd ? 'var(--destination-color)' : 'var(--departure-color)'};\n\n  flex-shrink: 0;\n  flex-grow: 1;\n\n  width: 12rem;\n  padding: 0.5rem;\n  border: 2px solid var(--border-color);\n  border-radius: 0.8rem;\n  transition: box-shadow 0.3s ease-out;\n  box-shadow: 0 0 12px 2px\n    ${(p) => (p.isSelected ? 'var(--border-color)' : 'none')};\n`\n\nconst Center = styled.div`\n  flex-shrink: 0;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  svg {\n    fill: #844da3;\n  }\n`\n\nconst StationName = styled.h2`\n  font-size: 1.4rem;\n  line-height: normal;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin-bottom: 0.4rem;\n`\n\nconst Duration = styled.time`\n  font-size: 1rem;\n`\n\nconst Root = styled.li`\n  outline: none;\n  display: flex;\n  align-items: center;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  color: #545454;\n`\n\ninterface TripItemProps extends TripItem {\n  id: string\n  onSelectTrip(tripId: string): void\n  isSelected: boolean\n}\n\nexport const TripsItem: React.FC<TripItemProps> = ({\n  id,\n  isSelected,\n  onSelectTrip,\n  endStationName,\n  startStationName,\n  tripduration,\n  starttime,\n  stoptime\n}) => {\n  const handleSelectTrip = useCallback(() => onSelectTrip(id), [\n    id,\n    onSelectTrip\n  ])\n\n  const rootRef = useRef<HTMLLIElement>(null)\n  const handleSelectTripOnHover = useCallback(() => {\n    onSelectTrip(id)\n\n    if (rootRef.current !== null) rootRef.current.focus()\n  }, [id, onSelectTrip])\n\n  return (\n    <Root\n      tabIndex={0}\n      ref={rootRef}\n      onMouseEnter={handleSelectTripOnHover}\n      onFocus={handleSelectTrip}\n    >\n      <StationWrapper isSelected={isSelected}>\n        <StationName>{startStationName}</StationName>\n        <div>\n          <div>Departs at:</div>\n          <time>{format(starttime, DATE_FORMAT)}</time>\n        </div>\n      </StationWrapper>\n\n      <Center>\n        <Duration>{formatDuration(tripduration)}</Duration>\n        <ArrowIcon />\n      </Center>\n\n      <StationWrapper isEnd isSelected={isSelected}>\n        <StationName>{endStationName}</StationName>\n        <div>\n          <div>Arrives at:</div>\n          <time>{format(stoptime, DATE_FORMAT)}</time>\n        </div>\n      </StationWrapper>\n    </Root>\n  )\n}\n","import React from 'react'\nimport { styled } from 'linaria/react'\nimport { TripsData } from 'src/types'\n\nimport { TripsItem } from './trips-item'\n\nconst Root = styled.ul`\n  padding-left: 1rem;\n  padding-right: 1rem;\n  height: 100%;\n  overflow-y: auto;\n\n  ::-webkit-scrollbar {\n    width: 0.5rem;\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: #f7f5fa;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: #eddbfb;\n    outline: 1px solid #eddbfb;\n  }\n`\n\ninterface TripsListProps {\n  trips: TripsData\n  currentTripId: string | null\n  onSelectTrip: (tripId: string) => void\n}\n\nexport const TripsList: React.FC<TripsListProps> = ({\n  trips,\n  onSelectTrip,\n  currentTripId\n}) => (\n  <Root>\n    {Object.entries(trips).map(([tripId, trip]) => (\n      <TripsItem\n        onSelectTrip={onSelectTrip}\n        isSelected={tripId === currentTripId}\n        key={tripId}\n        id={tripId}\n        {...trip}\n      />\n    ))}\n  </Root>\n)\n","import { TripsData, TripItem, LngLat } from 'src/types'\n\nexport const getTripStartCoords = ({\n  startStationLongitude,\n  startStationLatitude\n}: TripItem): LngLat => [startStationLongitude, startStationLatitude]\n\nexport const getTripEndCoords = ({\n  endStationLongitude,\n  endStationLatitude\n}: TripItem): LngLat => [endStationLongitude, endStationLatitude]\n\nexport const calcMapBounds = (trips: TripsData) => {\n  const tripsArray = Object.values(trips)\n\n  const [firstTrip, ...otherTrips] = tripsArray\n\n  return otherTrips.reduce<[LngLat, LngLat]>(\n    (\n      [[smallestLng, smallestLat], [biggestLng, biggestLat]],\n      {\n        startStationLongitude,\n        startStationLatitude,\n        endStationLongitude,\n        endStationLatitude\n      }\n    ) => [\n      [\n        Math.min(startStationLongitude, endStationLongitude, smallestLng),\n        Math.min(startStationLatitude, endStationLatitude, smallestLat)\n      ],\n      [\n        Math.max(startStationLongitude, endStationLongitude, biggestLng),\n        Math.max(startStationLatitude, endStationLatitude, biggestLat)\n      ]\n    ],\n    [getTripStartCoords(firstTrip), getTripEndCoords(firstTrip)]\n  )\n}\n","import React, { useMemo, Fragment } from 'react'\nimport { css } from 'linaria'\nimport { styled } from 'linaria/react'\nimport { TripsData, LngLat } from 'src/types'\nimport {\n  getTripStartCoords,\n  getTripEndCoords,\n  calcMapBounds\n} from 'src/helpers'\nimport ReactMapboxGl, { Marker, Popup } from 'react-mapbox-gl'\n\nconst Map = ReactMapboxGl({\n  accessToken:\n    'pk.eyJ1IjoiYWxleG91dHRhc3BhY2UiLCJhIjoiY2p5ZDI2bTRsMGQ5dzNjcW01azIxdGRiciJ9.CtlNSN-Vc6p-_HbAAj9zFQ'\n})\n\nconst mapStyles = css`\n  height: 100%;\n  width: 100%;\n`\n\nconst StationName = styled.h2`\n  font-size: 1.3rem;\n`\n\nconst MarkerInner = styled.div<{\n  isSelected: boolean\n  isEnd?: boolean\n  sizeMultiplier: number\n}>`\n  --marker-color: ${(p) =>\n    p.isEnd ? 'var(--destination-color)' : 'var(--departure-color)'};\n  --marker-size: ${(p) => Math.log10(p.sizeMultiplier + 2)};\n\n  border-radius: 50%;\n  position: relative;\n  height: 1rem;\n  width: 1rem;\n  background-color: ${(p) => (p.isSelected ? 'var(--marker-color)' : '#ccc')};\n  z-index: ${(p) => (p.isSelected ? 1 : 0)};\n  box-shadow: 0 0 1px blue;\n  transition: ${(p) => (p.isSelected ? 'all 0.3s ease-out' : 'none')};\n  transform: ${(p) => (p.isSelected ? 'scale(var(--marker-size))' : 'none')};\n  box-shadow: 0 0 12px 2px\n    ${(p) => (p.isSelected ? 'var(--marker-color)' : 'none')};\n`\n\ninterface TripsMapProps {\n  trips: TripsData\n  currentTripId: string | null\n}\n\nconst fitBoundsOptions = {\n  padding: { top: 50, left: 50, bottom: 50, right: 50 }\n}\n\nexport const TripsMap: React.FC<TripsMapProps> = ({ trips, currentTripId }) => {\n  const fitBounds = useMemo<[LngLat, LngLat]>(() => calcMapBounds(trips), [\n    trips\n  ])\n\n  const currentTrip = currentTripId && trips[currentTripId]\n\n  return (\n    <Map\n      className={mapStyles}\n      fitBounds={fitBounds}\n      fitBoundsOptions={fitBoundsOptions}\n      style=\"mapbox://styles/alexouttaspace/cjydo73es0wqf1co2xs5ly8z7\" // eslint-disable-line react/style-prop-object\n    >\n      <Fragment>\n        {Object.entries(trips).map(([tripId, trip]) => {\n          const isSelected = tripId === currentTripId\n          const startStationCoords = getTripStartCoords(trip)\n          const endStationCoords = getTripEndCoords(trip)\n\n          return (\n            <Fragment key={tripId}>\n              <Marker\n                anchor=\"center\"\n                style={{ zIndex: isSelected ? 1 : 0 }}\n                coordinates={startStationCoords}\n              >\n                <MarkerInner\n                  sizeMultiplier={trip.tripduration}\n                  isSelected={isSelected}\n                />\n              </Marker>\n              <Marker\n                anchor=\"center\"\n                style={{\n                  zIndex: isSelected ? 1 : 0\n                }}\n                coordinates={endStationCoords}\n              >\n                <MarkerInner\n                  sizeMultiplier={trip.tripduration}\n                  isSelected={isSelected}\n                  isEnd\n                />\n              </Marker>\n            </Fragment>\n          )\n        })}\n\n        {currentTrip && (\n          <Fragment>\n            <Popup coordinates={getTripStartCoords(currentTrip)}>\n              <StationName>{currentTrip.startStationName}</StationName>\n            </Popup>\n\n            <Popup coordinates={getTripEndCoords(currentTrip)}>\n              <StationName>{currentTrip.endStationName}</StationName>\n            </Popup>\n          </Fragment>\n        )}\n      </Fragment>\n    </Map>\n  )\n}\n","import React, { Fragment, useState } from 'react'\nimport { TripsList, TripsMap } from 'src/components'\nimport { Layout } from 'src/ui'\nimport { TripItem, TripsData } from 'src/types'\nimport { v4 as uuid } from 'uuid'\nimport camelcaseKeys from 'camelcase-keys'\n\nimport rawData from './trips-data.json'\n\n// if this array gets big, we can always switch to using Map\nconst tripsData: TripsData = rawData.reduce((acc, trip) => {\n  return {\n    ...acc,\n    [uuid()]: (camelcaseKeys(trip) as unknown) as TripItem\n  }\n}, {})\n\nexport const App: React.FC = () => {\n  const [currentTripId, setCurrentTripId] = useState<string | null>(null)\n\n  return (\n    <Fragment>\n      <Layout\n        mapElement={\n          <TripsMap currentTripId={currentTripId} trips={tripsData} />\n        }\n        listElement={\n          <TripsList\n            onSelectTrip={setCurrentTripId}\n            trips={tripsData}\n            currentTripId={currentTripId}\n          />\n        }\n      />\n    </Fragment>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport 'reset-css'\nimport './index.css'\nimport { App } from './app'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}